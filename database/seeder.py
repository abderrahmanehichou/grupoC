import sqlite3 as sql


DB_PATH="/home/alumno/Escritorio/Web Full Stack/copias/grupoC/database/paises.db"


def createDB():
    conn=sql.connect(DB_PATH)
    cursor=conn.cursor()
    cursor.execute("""CREATE TABLE paises (
        siglas TEXT,
        nombre TEXT,
        poblacion INTEGER,
        extension INTEGER,
        temperatura INTEGER,
        lluvia INTEGER
    )""")
    conn.commit()
    conn.close()

def addvalues():
    conn=sql.connect(DB_PATH)
    cursor=conn.cursor()
    data = [
         ('US', 'Estados Unidos', 331002651, 9833517, 12.6, 715),
         ('CN', 'China', 1439323776, 9706961, 13, 641),
         ('IN', 'India', 1380004385, 3287263, 25.8, 1070),
         ('ID', 'Indonesia', 273523615, 1904569, 25, 2702),
         ('PK', 'Pakistán', 220892340, 881913, 24, 2550),
         ('BR', 'Brasil', 212559417, 8515767, 24, 1752),
         ('NG', 'Nigeria', 206139589, 923768, 26, 1131),
         ('BD', 'Bangladesh', 164689383, 147570, 25, 2667),
         ('RU', 'Rusia', 145934462, 17098242, 1, 707),
         ('MX', 'México', 128932753, 1964375, 20, 777),
         ('JP', 'Japón', 125360000, 377975, 16, 1710),
         ('PH', 'Filipinas', 109581078, 342353, 27, 2426),
         ('EG', 'Egipto', 102334404, 1002450, 22, 51),
         ('VN', 'Vietnam', 97338579, 331212, 24, 1720),
         ('CD', 'República Democrática del Congo', 89561403, 2344858, 24, 1550),
         ('DE', 'Alemania', 83783942, 357022, 9, 789),
         ('TR', 'Turquía', 84339067, 783356, 14, 819),
         ('IR', 'Irán', 83992949, 1648195, 16, 225),
         ('TH', 'Tailandia', 69799978, 513120, 28, 1530),
         ('GB', 'Reino Unido', 67886011, 242495, 10, 1150),
         ('FR', 'Francia', 65273511, 551695, 12, 867),
         ('IT', 'Italia', 60461826, 301340, 14, 830),
         ('TZ', 'Tanzania', 59734218, 947303, 23, 1130),
         ('ZA', 'Sudáfrica', 59308690, 1221037, 17, 464),
         ('MM', 'Myanmar', 54409800, 676578, 27, 2390),
         ('KE', 'Kenia', 53771296, 580367, 20, 1010),
         ('KR', 'Corea del Sur', 51269185, 100210, 12, 1268),
         ('CO', 'Colombia', 50882891, 1141748, 24, 2616),
         ('ES', 'España', 46754778, 505990, 14, 649),
         ('AR', 'Argentina', 45195777, 2780400, 14.8, 591),
         ('DZ', 'Argelia', 43851044, 2381741, 23.6, 89),
         ('SD', 'Sudán', 43849269, 1861484, 26, 239),
         ('UA', 'Ucrania', 43733762, 603500, 7.5, 603),
         ('UG', 'Uganda', 45741007, 241550, 22, 1200),
         ('PL', 'Polonia', 37846611, 312696, 7.8, 600),
         ('IQ', 'Iraq', 40222493, 438317, 23.4, 230),
         ('CA', 'Canadá', 37742154, 9984670, 5, 537),
         ('MA', 'Marruecos', 36910560, 446550, 20, 573),
         ('AF', 'Afganistán', 38928341, 652230, 12, 327),
         ('SA', 'Arabia Saudita', 34813871, 2149690, 25, 59),
         ('PE', 'Perú', 32971854, 1285216, 20, 1420),
         ('UZ', 'Uzbekistán', 33469203, 448978, 12, 215),
         ('AO', 'Angola', 32866272, 1246700, 21, 1008),
         ('CL', 'Chile', 19116201, 756102, 9.5, 695),
         ('NL', 'Países Bajos', 17134872, 41543, 10, 800),
         ('KZ', 'Kazajistán', 18776707, 2724900, 5, 244),
         ('EC', 'Ecuador', 17643054, 276841, 24, 2020),
         ('SY', 'Siria', 17500658, 185180, 18, 200),
         ('MW', 'Malaui', 19129952, 118484, 21, 1008),
         ('ML', 'Mali', 20250833, 1240192, 32, 300),
         ('KH', 'Camboya', 16718965, 181035, 27, 1700),
         ('ZW', 'Zimbabue', 14862927, 390757, 22, 825),
         ('YE', 'Yemen', 29825968, 527968, 23, 60),
         ('TD', 'Chad', 16425859, 1284000, 26, 250),
         ('TG', 'Togo', 8278724, 56785, 27, 920),
         ('SV', 'El Salvador', 6486205, 21041, 25, 1700),
         ('SR', 'Surinam', 586632, 163820, 27, 2200),
         ('NE', 'Níger', 24206636, 1267000, 27, 160),
         ('NI', 'Nicaragua', 6624554, 130373, 26, 1400),
         ('NA', 'Namibia', 2540905, 825615, 20, 300),
         ('MZ', 'Mozambique', 31255435, 799380, 24, 900),
         ('MN', 'Mongolia', 3278290, 1564110, -1, 300),
         ('LT', 'Lituania', 2722289, 65300, 6, 657),
         ('LR', 'Liberia', 5057681, 111369, 26, 5100),
         ('LS', 'Lesoto', 2142249, 30355, 12, 780),
         ('LA', 'Laos', 7275560, 236800, 24, 1770),
         ('KG', 'Kirguistán', 6524195, 199951, 3, 540),
         ('JO', 'Jordania', 10203134, 89342, 19, 290),
         ('JM', 'Jamaica', 2961167, 10991, 26, 1900),
         ('HT', 'Haití', 11402528, 27750, 25, 1450),
         ('HN', 'Honduras', 9904607, 112492, 25, 1600),
         ('GY', 'Guyana', 786552, 214969, 27, 2300),
         ('GN', 'Guinea', 13132792, 245857, 26, 4500),
         ('GW', 'Guinea-Bisáu', 1968001, 36125, 26, 2000),
         ('GT', 'Guatemala', 17915568, 108889, 23, 1750),
         ('GR', 'Grecia', 10423054, 131957, 17, 700),
         ('GH', 'Ghana', 31072940, 238533, 27, 1090),
         ('GM', 'Gambia', 2416668, 10689, 26, 1300),
         ('GA', 'Gabón', 2225734, 267667, 26, 2200),
         ('FI', 'Finlandia', 5540720, 338424, 2, 536),
         ('FJ', 'Fiyi', 896445, 18274, 26, 2000),
         ('ET', 'Etiopía', 114963588, 1104300, 22, 1160),
         ('ER', 'Eritrea', 3546421, 117600, 30, 207),
         ('EE', 'Estonia', 1326535, 45227, 5, 600),
         ('DO', 'República Dominicana', 10847910, 48671, 25, 1400),
         ('DM', 'Dominica', 71986, 739, 25, 2170),
         ('DJ', 'Yibuti', 988000, 23180, 30, 130),
         ('DK', 'Dinamarca', 5792202, 43094, 8, 712),
         ('CU', 'Cuba', 11326616, 109884, 25, 1390),
         ('CR', 'Costa Rica', 5094118, 51100, 25, 2500),
         ('KM', 'Comoras', 869601, 1862, 26, 2050),
         ('CI', 'Costa de Marfil', 26378274, 322463, 27, 1200),
         ('CF', 'República Centroafricana', 4829767, 622984, 26, 1400),
         ('BI', 'Burundi', 11890784, 27834, 20, 1040),
         ('CM', 'Camerún', 26545863, 475442, 26, 1280),
         ('CV', 'Cabo Verde', 555988, 4033, 25, 250),
         ('BW', 'Botsuana', 2351627, 581730, 21, 200),
         ('BO', 'Bolivia', 11673021, 1098581, 15, 1700),
         ('BN', 'Brunéi', 437479, 5765, 27, 2900),
    ]

    cursor.executemany(""" INSERT INTO paises VALUES(?,?,?,?,?,?)""",data)
    conn.commit ()
    conn.close()


if __name__=="__main__":
   createDB()
   addvalues()